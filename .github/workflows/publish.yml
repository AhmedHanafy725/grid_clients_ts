# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Publish

on:
  push:
    tags:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
        cache: 'yarn'

    - name: Install
      run: yarn
    - name: Build
      run: yarn build
    - name: Publish
      run: |
        yarn workspace @threefold/rmb publish 
        yarn workspace @threefold/grid publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker-image:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: "{{defaultContext}}:packages/grid"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          GRID3_CLIENT_VERSION=${{ steps.meta.outputs.version }}
